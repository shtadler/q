server {
    listen       ${NGINX_PORT};
    server_name  localhost;
    default_type  application/json;
 
    error_page 401 @401;
    location @401 {
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "*" always;
      add_header Access-Control-Allow-Origin "*" always;
      return 401 '{"error": {"status_code": 401,"status": "Authorization Required"}}';
    }

    error_page 404 @404;
    location @404 {
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "*" always;
      add_header Access-Control-Allow-Origin "*" always;
      return 404 '{"error": {"status_code": 404,"status": "Not Found"}}';
    }

    error_page 400 @400;
    location @400 {
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "*" always;
      add_header Access-Control-Allow-Origin "*" always;
      return 400 '{"error": {"status_code": 400,"status": "Bad request"}}';
    }

    error_page 500 @500;
    location @500 {
      add_header Access-Control-Allow-Headers "*" always;
      add_header Access-Control-Allow-Methods "*" always;
      add_header Access-Control-Allow-Origin "*" always;
      return 500 '{"error": {"status_code": 500,"status": "Something went wrong"}}';
    }

    location ~ /(sitemap\.xml|-/media/.*|sitecore/api/(?<service>.*?)/.*)$ {
      set $delimeter "";
      if ($is_args) {
          set $delimeter "&";
      }
      
      set $apiKey "${JSS_API_KEY}";
      
      
      if ($service = "graph") {
        set $apiKey "${GRAPHQL_API_KEY}";
      }
      if ($service = "ssc") {
        set $apiKey "${ODATA_API_KEY}";
      }
      
      set $args "$args${delimeter}sc_apikey=$apiKey";

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass_header Set-Cookie;
      proxy_cookie_domain ${PROXY_HOST} $host;

      set $sitecore_addr "${PROXY_HOST}$uri?$args";
      proxy_pass $sitecore_addr;
    }        

}
